/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E                 &kp R         &kp T                 &kp Y                &kp U            &kp I                &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D                 &kp F         &kp G                 &kp H                &kp J            &kp K                &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C                 &kp V         &kp B                 &kp N                &kp M            &kp COMMA            &kp DOT  &kp FSLH  &kp ESC
                         &mt LEFT_CONTROL TAB  &lt 1 ESCAPE  &mt LEFT_GUI SPACE    &mt RIGHT_GUI ENTER  &lt 2 BACKSPACE  &mt RIGHT_ALT GRAVE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp N6    &kp N7    &kp N8  &kp N9     &kp N0  &kp BSPC
&trans     &trans  &trans  &trans  &trans  &trans    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&kp LSHFT  &trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans  &trans     &trans  &trans
                           &trans  &trans  &trans    &trans    &mo 3     &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL           &kp AT            &kp HASH         &kp DLLR               &kp PRCNT        &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR        &kp RPAR         &kp BSPC
&kp LCTRL  &kp LEFT_BRACKET   &kp LESS_THAN     &kp LEFT_BRACE   &kp LEFT_PARENTHESIS   &kp PAGE_UP      &kp MINUS  &kp EQUAL  &kp BSLH   &kp LBKT        &kp RBKT         &kp GRAVE
&kp LSHFT  &kp RIGHT_BRACKET  &kp GREATER_THAN  &kp RIGHT_BRACE  &kp RIGHT_PARENTHESIS  &kp PAGE_DOWN    &kp UNDER  &kp PLUS   &kp PIPE   &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp TILDE
                                                &trans           &mo 3                  &trans           &trans     &trans     &trans
            >;
        };

        FUNC_LAYER {
            bindings = <
&out OUT_TOG    &kp F1      &kp F2        &kp F3        &kp F4        &kp F5        &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11
&trans          &trans      &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans   &kp F12
&bt BT_CLR_ALL  &bt BT_CLR  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_NXT    &trans  &trans  &trans  &trans  &trans   &trans
                                          &trans        &trans        &trans        &trans  &trans  &trans
            >;
        };
    };
};
